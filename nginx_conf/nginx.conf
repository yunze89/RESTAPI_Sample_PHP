
user  nginx;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

#rtmp protocol block 18/05/07 12:30
rtmp {
    server {
	   listen 1935;
	   ping 30s;
	   notify_method get;
	   #chunk_size 8192;
	   #publish_time_fix off;

	   application rtmp {
	       live on;
	       #record all;
	       #record_path /usr/local/nginx/html/rtmpvod;
	       #record_unique on;
	       #record_max_size 128k;
	       access_log logs/rtmp_access.log;

         record keyframes;
         record_max_frames 5;
         record_path /usr/local/nginx/html/screenshot;
         record_interval 20s;   #?초마다 녹화 다시 시작 : ?초 끝날때마다 스크린샷을 찍겠네

         #exec ffmpeg -i $path -vcodec png -vf fps=10 -an -f rawvideo -s 240x320 -y /usr/local/nginx/html/screenshot/$name%03d.png;
         #녹화 끝났을 때 실행 하는 외부 명령
         exec_record_done ffmpeg -i $path -vcodec png -vframes 1 -an -f rawvideo -s 240x320 -ss 00:00:01 -y /usr/local/nginx/html/screenshot/$name.png;

         dash on;
         dash_nested on;
         dash_cleanup off;
	       dash_path /usr/local/nginx/html/dash;
	       dash_fragment 5s;
	       dash_playlist_length 1m;
	    }

	    application vod {
	       play /usr/local/nginx/html/rtmpvod;
	    }
   }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 8M;

    #gzip  on;

    server {
        listen       80;
        server_name  13.125.78.57;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /RouteSample/{
            index /RouteSample/index.php;
            try_files $uri $uri/ /RouteSample/index.php$args;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        location ~ \.(php|html|htm)$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
	      fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
             fastcgi_index  index.php;
             fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
             include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

	#dash, rtmp protocol block 18/05/07 12:33
	location dash {
	     root html/dash/;
	     add_header Cache-Control no-cache;
	     add_header Access-Control-Allow-Origin *;
	}

	location /rtmpcontrol {
	      rtmp_control all;
	}

	location /rtmpstat {
	      rtmp_stat all;
	      rtmp_stat_stylesheet stat.xsl;
	}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    #HTTPS server
    #
    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate      /opt/janus/share/janus/certs/mycert.pem;
        ssl_certificate_key  /opt/janus/share/janus/certs/mycert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    location / {
            root   html;
            index  index.html index.htm;
        }
    }

}
